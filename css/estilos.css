*, *::after, *::before { box-sizing: border-box; }

/* Declarado no root para que fique de forma global, para que seja aplicada em toda a página de acordo a necessidade. */
/* Declaração de variáveis para paleta de cores */
:root {
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara: #fff;
    --cor-intermediaria: #ececec;
}

/* Reset em alguns elementos usados neste projeto */
body, h1, h2, p, figure, .links-menu {
    margin: 0;
    padding: 0;
    list-style: none; /*Removendo marcadores da lista ul */
}

/* Importante para uso da medida relativa REM */
html { font-size: 16px; }

/* Fontes que tem espaço deverão estar entre "" */
body {
    font-family: "Noto Sans", sans-serif;
    color: var(--cor-texto);
}

img { max-width: 100%;}

/* Links sem underline */
a { text-decoration: none;}

.titulo {
    font-family: Raleway, sans-serif;

    /* transformar a letra em maiusculo */
    text-transform: uppercase;

    /* Nível de negrito, algumas fontes dão essa opção no google fonts */
    font-weight: 800;
    font-size: 1.5rem;

    /* Formatando o link dentro do h1 */
    a {
        background-color: var(--cor-escura);
        color: var(--cor-clara);
        padding: 0.3rem 1rem;
        border-radius: 4px;
    }
}

.topo {
    /* background-color: yellow ; */ /* ver como irá se comportar */
    
    /*viewport height, deixa o espaço variável de acordo com a viewport */
    height: 12vh; 
    /* height: 150px; provisório */
    
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* class + a, por se tratar de um link. Assim será configurado os dois */
.titulo-menu a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    
    /* background-color: aquamarine; */ /*ver como o .titulo-menu se comporta */

    padding: 1rem;

    /* Vai fazer com que o "menu" não sobreponha/invade as demais oções da lista */
    display: inline-block;
}

/* poderia ser: 
.titulo-menu a:hover
.links-menu a:hover
como existe a class menu no nav, já irá agrupar tudo, então usaremos: */
.menu a:hover, .menu a:focus {
    background-color: var(--cor-intermediaria);
}

/* Estilos para lista ul contida no menu nav */
.links-menu {

    /* Atenção! Neste ponto, fazemos com que os links do menu iniciem escondidos (display:none) em telas pequenas. Posteriormente, com a ajuda do CSS combinado com o JS, faremos os comandos necessários para exibir/esconder de forma alternada. */
    display: none;

    /* Formatação dos links */
    a {
        color: var(--cor-escura);
        font-weight: bold;
        /* background-color: yellow; */
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

.links-menu.aberto {

    /* Ativamos o flex para anular o display:none (fazendo os links aparecerem) e ao mesmo tempo ter os recursos do flex. */
    display: flex;

    /* Mudamos a direção para coluna para voltar a exibir um link em cima do outro. */
    flex-direction: column;

    /* Usamos o position e coordenadas para ajustara posição e o tamanho que os links ocuparam na tela logo abaixo da palavra Menu. */
    position: absolute;
    left: 0;
    right: 0;

    background-color: var(--cor-clara);
}

/* Exercícios */

/* 

1) Crie uma regra específica para formatar o artigo "Destaque" com as seguintes configurações:

- Altura de 88vh
- Imagem de fundo (fundo-destaque)
- Imagem de fundo deve ficar parada
- Use o flex para alinhar totalmente no meio
- Use o flex para garantir que os textos fiquem um em cima do outro

2) Crie uma regra para formatar os "h2" e o "p" contidos no "Destaque". Faça com que os textos fiquem centralizados com a cor clada.

*/

.destaque {
    height: 88vh;
    background-image: url(../imagens/fundo-destaque.jpg);
    background-attachment: fixed;
    /* background-repeat: no-repeat; */

    display: flex;
    justify-content: center;
    align-items: center;
    
    flex-direction: column;
    /* Também pode ser feito assim: */
    /* flex-wrap: wrap;
    align-content: center; */

    background-size: cover;
    
    h2, p {
        color: var(--cor-clara);
        text-align: center;
        animation-name: animaDestaque;
        animation-duration: 2s;
    }

    h2 {font-size: clamp(3rem, 10vw, 7rem);}

    p {
        font-size: clamp(1.5rem, 3vw, 3rem);
        animation-delay: .5s;

        /* Antes da animação: o elemento assume o estilo do primeiro keyframe(ou seja, o from). Portanto assim, forçamos a iniciar com opacity zero e escala menor 30%.  */
        animation-fill-mode: backwards;
    }
}
/* Sobre a função clamp()
Função útil para redimensionamento responsivo de acordo com critérios de tamanhos mínimo, ideal/variável/responsivo e máximo.  Uso mais comum é para textos responsivos, mas pode ser usado com qualquer propriedade que envolva tamanhos (width,height, etc).

clamp(
    tamanho mínimo,
    tamanho ideal/variável/responsivo,
    tamanho máximo
)
*/

/* 1) Criar a animação */
@keyframes animaDestaque {
    from {
        opacity: 0;
        transform: scale(0.3);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

article {
    h2 {
    padding: 1rem;
    font-size: 1.4rem;
    font-family: Raleway;
    color: var(--cor-titulo);
    }

    article p {
        padding: 0.5rem 0;
        font-size: 1.2rem;
    }

    address {
        font-style: normal;
        font-size: 1.2rem;
    }
}

.front-end, .historia, .localizacao {
    text-align: center;
}

