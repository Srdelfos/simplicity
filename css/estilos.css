*, *::after, *::before { box-sizing: border-box; }

/* Declarado no root para que fique de forma global, para que seja aplicada em toda a página de acordo a necessidade. */
/* Declaração de variáveis para paleta de cores */
:root {
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara: #fff;
    --cor-intermediaria: #ececec;
}

/* Reset em alguns elementos usados neste projeto */
body, h1, h2, p, figure, .links-menu {
    margin: 0;
    padding: 0;
    list-style: none; /*Removendo marcadores da lista ul */
}

/* Importante para uso da medida relativa REM */
html { font-size: 16px; }

/* Fontes que tem espaço deverão estar entre "" */
body {
    font-family: "Noto Sans", sans-serif;
    color: var(--cor-texto);
}

img { max-width: 100%;}

/* Links sem underline */
a { text-decoration: none;}

.titulo {
    font-family: Raleway, sans-serif;

    /* transformar a letra em maiusculo */
    text-transform: uppercase;

    /* Nível de negrito, algumas fontes dão essa opção no google fonts */
    font-weight: 800;
    font-size: 1.5rem;

    /* Formatando o link dentro do h1 */
    a {
        background-color: var(--cor-escura);
        color: var(--cor-clara);
        padding: 0.3rem 1rem;
        border-radius: 4px;
    }
}

.topo {
    /* Necessário para garantir que o topo sempre fique por cima de qualquer elemento */
    z-index: 10;
    
    position: sticky;
    top: 0;    
    background-color: var(--cor-clara);
    
    /* Classe .limitador específica para uso no cabeçalho/topo: além das configurações gerais (width e margin), AQUI ela também tem altura e ajustes do flex. */
    .limitador{
        height: 12vh;     
        display: flex;
        justify-content: space-between;
        align-items: center;     
    }
}

/* Classe .limitador de uso geral:
Sempre terá largura de 95vw e margin auto não importando onde será aplicado. */
.limitador {
    width: 95vw;
    margin: auto;
}

/* class + a, por se tratar de um link. Assim será configurado os dois */
.titulo-menu a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    padding: 1rem;

    /* Vai fazer com que o "menu" não sobreponha/invade as demais oções da lista */
    display: inline-block;
}

/* poderia ser: 
.titulo-menu a:hover
.links-menu a:hover
como existe a class menu no nav, já irá agrupar tudo, então usaremos: */
.menu a:hover, .menu a:focus {
    background-color: var(--cor-intermediaria);
}

/* Estilos para lista ul contida no menu nav */
.links-menu {

    /* Atenção! Neste ponto, fazemos com que os links do menu iniciem escondidos (display:none) em telas pequenas. Posteriormente, com a ajuda do CSS combinado com o JS, faremos os comandos necessários para exibir/esconder de forma alternada. */
    display: none;

    /* Formatação dos links */
    a {
        color: var(--cor-escura);
        font-weight: bold;
        /* background-color: yellow; */
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

.links-menu.aberto {

    /* Ativamos o flex para anular o display:none (fazendo os links aparecerem) e ao mesmo tempo ter os recursos do flex. */
    display: flex;

    /* Mudamos a direção para coluna para voltar a exibir um link em cima do outro. */
    flex-direction: column;

    /* Usamos o position e coordenadas para ajustara posição e o tamanho que os links ocuparam na tela logo abaixo da palavra Menu. */
    position: absolute;
    left: 0;
    right: 0;

    background-color: var(--cor-clara);
}

/* Exercícios */

/* 

1) Crie uma regra específica para formatar o artigo "Destaque" com as seguintes configurações:

- Altura de 88vh
- Imagem de fundo (fundo-destaque)
- Imagem de fundo deve ficar parada
- Use o flex para alinhar totalmente no meio
- Use o flex para garantir que os textos fiquem um em cima do outro

2) Crie uma regra para formatar os "h2" e o "p" contidos no "Destaque". Faça com que os textos fiquem centralizados com a cor clada.

*/

.destaque {
    height: 88vh;
    background-image: url(../imagens/fundo-destaque.jpg);
    background-attachment: fixed;
    /* background-repeat: no-repeat; */

    display: flex;
    justify-content: center;
    align-items: center;
    
    flex-direction: column;
    /* Também pode ser feito assim: */
    /* flex-wrap: wrap;
    align-content: center; */

    background-size: cover;
    
    h2, p {
        color: var(--cor-clara);
        text-align: center;
        animation-name: animaDestaque;
        animation-duration: 2s;
    }

    h2 {font-size: clamp(3rem, 10vw, 7rem);}

    p {
        font-size: clamp(1.5rem, 3vw, 3rem);
        animation-delay: .5s;

        /* Antes da animação: o elemento assume o estilo do primeiro keyframe(ou seja, o from). Portanto assim, forçamos a iniciar com opacity zero e escala menor 30%.  */
        animation-fill-mode: backwards;
    }
}
/* Sobre a função clamp()
Função útil para redimensionamento responsivo de acordo com critérios de tamanhos mínimo, ideal/variável/responsivo e máximo.  Uso mais comum é para textos responsivos, mas pode ser usado com qualquer propriedade que envolva tamanhos (width,height, etc).

clamp(
    tamanho mínimo,
    tamanho ideal/variável/responsivo,
    tamanho máximo
)
*/

/* 1) Criar a animação */
@keyframes animaDestaque {
    from {
        opacity: 0;
        transform: scale(0.3);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

article {
    h2 {
    padding: 1rem;
    font-size: 1.4rem;
    font-family: Raleway;
    color: var(--cor-titulo);
    }

    p {
        padding: 0.5rem 0;
        font-size: 1.2rem;
    }

    address {
        font-style: normal;
        font-size: 1.2rem;
    }
}

.front-end, .historia, .localizacao {
    text-align: center;
}

.historia {
    background-image:url(../imagens/fundo-madeira.jpg);
    background-size: cover;
    /* background-attachment: fixed; */

    h2 {
        color: var(--cor-clara);
        text-shadow: 1px 0 0 red;
    }

    iframe {
        width: 100%;
        max-width: 700px;
        margin-bottom: 2rem;
    }
}

.localizacao iframe {
    width: 100%;
    margin-top: 2rem;
}

.rodape {
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    height: 30vh;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

/* Regras para as páginas internas (Produtos, Serviços e Contato) */
.conteudo-interno {
    background-color: var(--cor-intermediaria);
    padding: .5rem;
    border-radius: 8px;

    h2 { 
        padding-left: 0;
        font-size: 1.8rem;
    }
}

table {
    border: solid 4px var(--cor-escura);
    width: 80%;
    max-width: 600px;
    margin: auto;
    border-collapse: collapse;    
    
    caption { 
        text-transform: uppercase;
        font-size: 1.2rem;
        padding-bottom: .3rem;
    }

    th,td { border: solid 1px var(--cor-escura);}
    
    th {
        background-color: var(--cor-escura);
        color: var(--cor-clara);
        padding: .5rem;
    }

    td { padding: .4rem; }

    td:nth-child(2) {text-align: center;}
    td:last-child, th:last-child {text-align: right;}

    tr:nth-child(odd) {background-color: var(--cor-clara);}
}

.galeria {
    text-align: center;

    img {
        border-radius: 50%;
        transform: scale(.8) rotate(-10deg);
        box-shadow: var(--cor-escura) 0 0 30px;
        transition: .5s;
        /* .galeria img:hover (que está FORA):
        .galeria img:hover {
        transform: scale(1) rotate(0);
        Poderia ter sido feito AQUI dentro da seguinte maneira: 
        &hover { transform: scale(1) rotate(0); } */
    }
}

.galeria img:hover {
transform: scale(1) rotate(0);
}

/*  Media Queries: regras de uso condicional de acordo com o tamanho de tela necessário para ajustes no site */

@media screen and (min-width:600px) {
    /* Escondendo a palavra menu */
    .titulo-menu {display: none;}

    /* Exibimos os links (lista de links) */
    .links-menu { 
        display: flex;

        /* Forçamos cada item da lista a ter largura total e, com isso, redistribuir os espaços/alinhamentos. */
        li { width: 100%;}    
    }
    /* Ajustamos o tamanho do menu (nav) como um todo */
    .menu { width: 60%}
}

@media screen and (min-width:1000px) {
    html { font-size: 18px;}
    .limitador { max-width: 1000px;}
}